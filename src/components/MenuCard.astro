---
import { formatPrice, capitalize } from "~/scripts/utils";
import { Image, getImage } from "astro:assets";

interface Props {
  name: string;
  description: string | undefined;
  price: number | Record<string, number | undefined>;
  imgSrc: string;
}

const { name, description, price, imgSrc } = Astro.props;
const formattedPrice = formatPrice(price);
const menuImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/menu/*.{jpeg,jpg,png,webp}",
);
const fullSize = await getImage({
  src: menuImages[imgSrc](),
  format: "webp",
});
---

<li class="flex flex-col sm:flex-row gap-4 sm:gap-6 items-center">
  <a
    id="dish"
    href={fullSize.src}
    data-pswp-height={fullSize.attributes.height}
    data-pswp-width={fullSize.attributes.width}
  >
    <div
      class="w-full sm:max-w-40 md:max-w-52 lg:max-w-72 h-auto rounded-md overflow-hidden"
    >
      <Image
        src={menuImages[imgSrc]()}
        densities={[1.5, 2]}
        format="webp"
        decoding="async"
        class="w-full h-full object-cover"
        alt={name}
      />
    </div>
  </a>
  <div class="flex flex-col justify-center w-full">
    <h3 class="font-semibold text-lg">{name}</h3>
    {
      description && (
        <p class="max-w-prose text-stone-500 mt-2 sm:mt-3">{description}</p>
      )
    }
    {
      typeof formattedPrice === "string" ? (
        <p class="text-stone-900 mt-1.5 sm:mt-3">{formattedPrice}</p>
      ) : (
        <ul class="text-stone-900 mt-3">
          {formattedPrice.map(({ name, price }) => (
            <li class="flex justify-between">
              <span>{capitalize(name)}</span>
              <span class="">{price}</span>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</li>
