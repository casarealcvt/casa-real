---
interface Props {
  headings: {
    id: string;
    label: string;
  }[];
}

const { headings } = Astro.props;
---

<ul>
  {
    headings.map((category) => (
      <li>
        <a href={"#" + category.id}>{category.label}</a>
      </li>
    ))
  }
</ul>
<script>
  const toObserve = document.querySelectorAll("a");

  const setCurrent: IntersectionObserverCallback = (entries) => {
    for (const { isIntersecting, target } of entries) {
      if (!isIntersecting) continue;
      const heading = getElementHeading(target);
      if (!heading) continue;
      const link = links.find(
        (link) => link.hash === "#" + encodeURIComponent(heading.id),
      );
      if (link) {
        this.current = link;
        break;
      }
    }
  };

  let observer: IntersectionObserver | undefined;
  const observe = () => {
    if (observer) observer.disconnect();
    observer = new IntersectionObserver(setCurrent, {
      rootMargin: "20px",
    });
    toObserve.forEach((h) => observer!.observe(h));
  };
  observe();
</script>
